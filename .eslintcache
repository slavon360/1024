[{"D:\\learning\\1024\\src\\App.js":"1","D:\\learning\\1024\\src\\components\\Desk\\Desk.js":"2","D:\\learning\\1024\\src\\components\\DynamicCell\\DynamicCell.js":"3","D:\\learning\\1024\\src\\components\\Card\\Card.js":"4","D:\\learning\\1024\\src\\components\\StaticCell\\StaticCell.js":"5","D:\\learning\\1024\\src\\reportWebVitals.js":"6"},{"size":5794,"mtime":1610295222663,"results":"7","hashOfConfig":"8"},{"size":1213,"mtime":1610041547128,"results":"9","hashOfConfig":"8"},{"size":2783,"mtime":1610041185023,"results":"10","hashOfConfig":"8"},{"size":880,"mtime":1610295165854,"results":"11","hashOfConfig":"8"},{"size":246,"mtime":1609677733630,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":1609511938275,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1g5looh",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\learning\\1024\\src\\App.js",["27"],"D:\\learning\\1024\\src\\components\\Desk\\Desk.js",[],"D:\\learning\\1024\\src\\components\\DynamicCell\\DynamicCell.js",["28","29"],"import React, { useState, useEffect } from 'react';\r\nimport cx from 'classnames';\r\n\r\nimport variables from '../../variables.module.scss';\r\nimport './DynamicCell.scss';\r\n\r\nconst { cellMarginBottom, cellMarginRight, cellWidthHeight } = variables;\r\n\r\nconst setColors = value => {\r\n\tswitch (value) {\r\n\t\tcase 2:\r\n\t\t\treturn { color: '#776e65', backgroundColor: '#eee4da' };\r\n\t\tcase 4:\r\n\t\t\treturn { color: '#776e65', backgroundColor: '#ede0c8' };\r\n\t\tcase 8:\r\n\t\t\treturn { color: '#f9f6f2', backgroundColor: '#f2b179' };\r\n\t\tcase 16:\r\n\t\t\treturn { color: '#f9f6f2', backgroundColor: '#f59563' };\r\n\t\tcase 32:\r\n\t\t\treturn { color: '#f9f6f2', backgroundColor: '#f67c5f' };\r\n\t\tcase 64:\r\n\t\t\treturn { color: '#f9f6f2', backgroundColor: '#f65e3b' };\r\n\t\tcase 128:\r\n\t\t\treturn { color: '#f9f6f2', backgroundColor: '#edcf72' };\r\n\t\tcase 256:\r\n\t\t\treturn {\r\n\t\t\t\tcolor: '#f9f6f2',\r\n\t\t\t\tbackgroundColor: '#edcc61',\r\n\t\t\t\tboxShadow: '0 0 30px 10px rgba(243, 215, 116, 0.31746), inset 0 0 0 1px rgba(255, 255, 255, 0.19048)'\r\n\t\t\t};\r\n\t\tcase 512:\r\n\t\t\treturn {\r\n\t\t\t\tcolor: '#f9f6f2',\r\n\t\t\t\tbackgroundColor: '#edc850',\r\n\t\t\t\tboxShadow: '0 0 30px 10px rgba(243, 215, 116, 0.39683), inset 0 0 0 1px rgba(255, 255, 255, 0.2381)'\r\n\t\t\t};\r\n\t\tcase 1024:\r\n\t\t\treturn {\r\n\t\t\t\tcolor: '#f9f6f2',\r\n\t\t\t\tbackgroundColor: '#edc53f',\r\n\t\t\t\tboxShadow: '0 0 30px 10px rgba(243, 215, 116, 0.47619), inset 0 0 0 1px rgba(255, 255, 255, 0.28571)',\r\n\t\t\t\tfontSize: '35px'\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn { color: '#776e65', backgroundColor: '#eee4da' };\r\n\t}\r\n}\r\n\r\nconst setPositions = (rowNumber, colNumber) => {\r\n\treturn {\r\n\t\tleft: Math.floor((parseFloat(cellWidthHeight) + parseFloat(cellMarginRight)) * (colNumber - 1)),\r\n\t\ttop: Math.floor((parseFloat(cellWidthHeight) + parseFloat(cellMarginBottom)) * (rowNumber - 1))\r\n\t}\r\n}\r\n\r\nconst DynamicCell = ({\r\n\tvalue,\r\n\trowNumber,\r\n\tcolNumber,\r\n\tprevRowNumber,\r\n\tprevColNumber,\r\n\tisNew,\r\n\ttoRemove,\r\n\tmerged\r\n}) => {\r\n\tconst colorStyles = setColors(value);\r\n\tconst prevPositionsStyles = setPositions(prevRowNumber, prevColNumber);\r\n\tconst [currentStyles, setCurrentStyles] = useState({ zIndex: toRemove ? -1 : 11 });\r\n\r\n\tuseEffect(() => {\r\n\t\tlet unmounted = false;\r\n\r\n\t\tif (!unmounted) {\r\n\t\t\twindow.setTimeout(() => {\r\n\t\t\t\tconst currentPositions = setPositions(rowNumber, colNumber);\r\n\r\n\t\t\t\tsetCurrentStyles({ ...currentStyles, ...currentPositions });\r\n\t\t\t}, 50);\r\n\t\t}\r\n\r\n\t\treturn () => { unmounted = true };\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCurrentStyles({ ...currentStyles, zIndex: toRemove ? -1 : 10 });\r\n\t}, [toRemove]);\r\n\r\n\treturn (\r\n\t\t<div className={cx('dynamic-cell-component', {\r\n\t\t\t'new-dynamic-cell': isNew,\r\n\t\t\t'dynamic-cell-merged': merged\r\n\t\t})} style={{\r\n\t\t\t...colorStyles,\r\n\t\t\t...prevPositionsStyles,\r\n\t\t\t...currentStyles\r\n\t\t}}>{value}</div>\r\n\t)\r\n};\r\n\r\nexport default DynamicCell;","D:\\learning\\1024\\src\\components\\Card\\Card.js",["30"],"D:\\learning\\1024\\src\\components\\StaticCell\\StaticCell.js",["31"],"D:\\learning\\1024\\src\\reportWebVitals.js",[],{"ruleId":"32","severity":1,"message":"33","line":171,"column":5,"nodeType":"34","endLine":171,"endColumn":7,"suggestions":"35"},{"ruleId":"32","severity":1,"message":"36","line":82,"column":5,"nodeType":"34","endLine":82,"endColumn":7,"suggestions":"37"},{"ruleId":"32","severity":1,"message":"38","line":86,"column":5,"nodeType":"34","endLine":86,"endColumn":15,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":26},{"ruleId":"40","severity":1,"message":"44","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'changeCellsPosition' and 'currentScore'. Either include them or remove the dependency array.","ArrayExpression",["45"],"React Hook useEffect has missing dependencies: 'colNumber', 'currentStyles', and 'rowNumber'. Either include them or remove the dependency array. You can also do a functional update 'setCurrentStyles(c => ...)' if you only need 'currentStyles' in the 'setCurrentStyles' call.",["46"],"React Hook useEffect has a missing dependency: 'currentStyles'. Either include it or remove the dependency array. You can also do a functional update 'setCurrentStyles(c => ...)' if you only need 'currentStyles' in the 'setCurrentStyles' call.",["47"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",{"desc":"48","fix":"49"},{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},"Update the dependencies array to be: [changeCellsPosition, currentScore]",{"range":"54","text":"55"},"Update the dependencies array to be: [colNumber, currentStyles, rowNumber]",{"range":"56","text":"57"},"Update the dependencies array to be: [currentStyles, toRemove]",{"range":"58","text":"59"},[5177,5179],"[changeCellsPosition, currentScore]",[2396,2398],"[colNumber, currentStyles, rowNumber]",[2499,2509],"[currentStyles, toRemove]"]